# -----------------------------------------------------------------------------
# Alembic central configuration for SmartSell (ASCII-only)
# -----------------------------------------------------------------------------
# NOTE:
# - Keep this file strictly ASCII to avoid UnicodeDecodeError on Windows.
# - env.py can normalize/override the DB URL from env variables.
# - This file is safe for Windows PowerShell and cmd.
# -----------------------------------------------------------------------------

[alembic]
# Where Alembic scripts live
script_location = migrations

# Where revision files are stored
version_locations = %(here)s/migrations/versions

# Console output encoding
output_encoding = utf-8

# Add project root to sys.path so "import app.*" works inside env.py
prepend_sys_path = .

# Fallback DB URL (env.py may override with DATABASE_URL / DB_URL / SQLALCHEMY_DATABASE_URI)
sqlalchemy.url = postgresql+psycopg2://postgres:admin123@localhost:5432/smartsell2

# Generated filename pattern: <rev>_<slug>.py
# IMPORTANT: use "rev", not "rev_id", otherwise Alembic raises KeyError('rev_id')
file_template = %%(rev)s_%%(slug)s
truncate_slug_length = 40

# Use UTC timestamps in revision headers
timezone = UTC

# Allow env.py to run code pre-revision (needed for some dynamic configs)
revision_environment = true

# Forwarded to context.configure() by env.py
compare_type = true
compare_server_default = true
include_schemas = true
render_as_batch = false
transactional_ddl = true

# Default schema for target metadata (informational; actual behavior in env.py)
target_metadata_schema = public

# Useful on Windows paths
version_path_separator = os

# For PostgreSQL max identifier length
max_identifier_length = 63

# Optional: directory with custom revision templates (env.py may use)
# templates_path = %(here)s/migrations/_templates

# -----------------------------------------------------------------------------
# Logging
# -----------------------------------------------------------------------------

[loggers]
keys = root, sqlalchemy, alembic

[handlers]
keys = console

[formatters]
keys = generic, json

[logger_root]
level = WARNING
handlers = console
qualname =

[logger_sqlalchemy]
level = WARNING
handlers =
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[handler_console]
class = StreamHandler
# log to stderr
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
# Example: INFO  [alembic.runtime.migration] Context impl PostgresqlImpl.
format = %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %Y-%m-%dT%H:%M:%S

[formatter_json]
# For integrations that prefer structured logs
format = {"level":"%(levelname)s","time":"%(asctime)s","name":"%(name)s","message":"%(message)s"}
datefmt = %Y-%m-%dT%H:%M:%S

# -----------------------------------------------------------------------------
# Post-write hooks (optional but handy). Requires "black" and "isort" installed.
# To disable hooks, set `hooks =` (empty). Keep sections below intact.
# -----------------------------------------------------------------------------

[post_write_hooks]
hooks = black
black.type = console_scripts
black.entrypoint = black
black.options = -l 100 -q


[post_write_hooks.black]
type = console_scripts
entrypoint = black
options = -q -l 100

[post_write_hooks.isort]
type = console_scripts
entrypoint = isort
options = -q --profile black

# -----------------------------------------------------------------------------
# Project-specific options consumed by migrations/env.py (custom section)
# -----------------------------------------------------------------------------
[smartsell]
# If true, allow creating empty revisions from autogenerate (we keep false)
allow_empty_autogenerate = false

# Comma-separated table names to exclude from autogenerate (keep empty or set via env)
exclude_tables =

# Where Alembic stores its version row (env.py can override via env vars)
version_table = alembic_version
version_table_schema = public

# Optional runtime toggles env.py may read (safe defaults)
# treat_warnings_as_errors = false
# offline_migrations = false
# batch_migrations = false

# -----------------------------------------------------------------------------
# Environment variable fallbacks used by env.py (documented here for clarity)
# DATABASE_URL / DB_URL / SQLALCHEMY_DATABASE_URI can override sqlalchemy.url
# ALEMBIC_VERSION_TABLE / ALEMBIC_VERSION_TABLE_SCHEMA can override version table
# ALEMBIC_EXCLUDE_TABLES can add comma-separated tables to skip in autogenerate
# ALEMBIC_DEBUG=1 prints additional diagnostics from env.py
# -----------------------------------------------------------------------------
