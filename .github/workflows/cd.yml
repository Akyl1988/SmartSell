name: CD

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]        # чтобы релизы работали по тегам
  workflow_dispatch:

env:
  IMAGE_NAME: smartsell/backend

jobs:
  build:
    name: Build & (optionally) Push Docker
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - name: Login Docker Hub
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=raw,value=latest,enable={{is_default_branch}}
      - name: Build & Push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy-staging:
    name: Deploy Staging
    runs-on: ubuntu-latest
    needs: [build]
    if: github.ref == 'refs/heads/develop'
    steps:
      - uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.STAGING_HOST }}
          username: ${{ secrets.STAGING_USER }}
          key: ${{ secrets.STAGING_SSH_KEY }}
          script: |
            set -e
            cd /opt/smartsell3
            git fetch origin develop && git reset --hard origin/develop
            docker compose -f docker-compose.staging.yml pull
            docker compose -f docker-compose.staging.yml up -d
            sleep 20
            curl -fsS http://localhost:8000/health

  deploy-production:
    name: Deploy Prod
    runs-on: ubuntu-latest
    needs: [build]
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USER }}
          key: ${{ secrets.PROD_SSH_KEY }}
          script: |
            set -e
            cd /opt/smartsell3
            # backup БД (проверь имена сервиса/БД)
            BACKUP_FILE="backup_$(date +%Y%m%d_%H%M%S).sql"
            docker compose exec -T db pg_dump -U smartsell smartsell > "$BACKUP_FILE"
            find . -name "backup_*.sql" -type f -mtime +7 -delete
            git fetch origin main && git reset --hard origin/main
            docker compose -f docker-compose.prod.yml pull
            docker compose -f docker-compose.prod.yml run --rm app alembic upgrade head
            docker compose -f docker-compose.prod.yml up -d
            for i in {1..10}; do
              curl -fsS http://localhost:8000/health && break || true
              sleep 6
              [ $i -eq 10 ] && exit 1
            done
